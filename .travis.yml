language: cpp

env:
matrix:
  include:
    - os: linux
      name: g++-8 on linux
      dist: xenial
      compiler: g++-8
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8', 'ninja-build', 'libboost-all-dev']
      env:
        - CMAKE_GENERATOR="Ninja"
        - CXX=g++-8
      before_install:
        - sudo unlink /usr/bin/gcc
        - sudo unlink /usr/bin/g++
        - sudo ln -s /usr/bin/g++-8 /usr/bin/g++
        - sudo ln -s /usr/bin/gcc-8 /usr/bin/gcc

    - os: linux
      name: clang++-9 on linux
      dist: xenial
      compiler: clang++-9
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty
            - llvm-toolchain-trusty-8
            - ubuntu-toolchain-r-test # llvm6.0 dep
            - libboost-all-dev
          packages: ['g++-8', 'ninja-build', 'clang-9', 'clang-8', 'lld-9', 'libboost-all-dev']
      env:
        - CMAKE_GENERATOR="Ninja"
        - CXX=clang++-9


# XCode 10.0
    - os: osx
      name: clang++-8 on Mac OS
      osx_image: xcode10.1
      sudo: required
      env:
        - CMAKE_GENERATOR="Ninja"
      language: cpp
      compiler: clang++-8
      before_install:
        - brew update
        - travis_wait 40 brew install llvm
        - brew upgrade cmake
        - brew install ninja
        - export LDFLAGS="-L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
        - export LDFLAGS="-L/usr/local/opt/llvm/lib"
        - export CPPFLAGS="-I/usr/local/opt/llvm/include"
        - export CXX=/usr/local/opt/llvm/bin/clang++
        - export CC=/usr/local/opt/llvm/bin/clang

    - name: "MinGW on windows - Debug"
      os: windows
      language: cpp
      env: BUILD_TYPE=Debug CMAKE_GENERATOR="MinGW Makefiles"
      compiler: MinGW

    - name: "MinGW on windows - Release"
      os: windows
      language: cpp
      env: BUILD_TYPE=Release CMAKE_GENERATOR="MinGW Makefiles"
      compiler: MinGW

# XCode 10.0
  allow_failures:
    - os: osx
      name: g++-8 on Mac OS
      osx_image: xcode10.0
      sudo: required
      language: cpp
      compiler: g++-8
      env:
        - COMPILER=g++-8
        - CMAKE_GENERATOR="Ninja"
        - BUILD_TYPE=Release
      before_install:
        - brew update
        - travis_wait 40 brew install gcc
        - brew upgrade cmake
        - brew install ninja
        - sudo rm /usr/bin/gcc
        - sudo rm /usr/bin/g++
        - sudo ln -s /usr/local/bin/g++-8 /usr/bin/g++
        - sudo ln -s /usr/local/bin/gcc-8 /usr/bin/gcc
        - export CXX=/usr/bin/g++
        - export CC=/usr/bin/gcc
        # - export CMAKE_CXX_COMPILER=g++
        # - echo $CMAKE_CXX_COMPILER
        # - echo $CXX
        # - echo $CC
  # allow_failures:
  #   - name: "Visual Studio 15 2017 on windows - Release"
  #     os: windows
  #     language: cpp
  #     env: BUILD_TYPE=Release CMAKE_GENERATOR="Visual Studio 15 2017"
  #     compiler: MSVC

  #   - name: "Visual Studio 15 2017 on windows - Debug"
  #     os: windows
  #     language: cpp
  #     env: BUILD_TYPE=Debug CMAKE_GENERATOR="Visual Studio 15 2017"
  #     compiler: MSVC

  #   - name: "clang on Windows"
  #     os: windows
  #     env:
  #       - CC="/c/Program Files/LLVM/bin/clang"
  #       - CXX="/c/Program Files/LLVM/bin/clang-cl"
  #     compiler: clang
  #     env: BUILD_TYPE=Release CMAKE_GENERATOR="MinGW Makefiles"
  #     install:
  #       # MSVC is already installed on Travis, keep it here just in case we need to use it later
  #       #- choco install visualstudio2017-workload-vctools -y --package-parameters "--no-includeRecommended --add Microsoft.VisualStudio.Component.VC.x86.amd64 --add Microsoft.VisualStudio.Component.Windows10SDK"
  #       - choco upgrade llvm -y
  #       - |-
  #         "${CC}" --version

script:
  - cmake -H. -Bbuild
          -G"${CMAKE_GENERATOR}"
          -DCMAKE_SH="CMAKE_SH-NOTFOUND"
  - cmake --build build
  - cmake --build build --target test
