language: cpp

matrix:
  include:

    - os: linux
      dist: xenial
      compiler: g++-8
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8', 'ninja-build', 'libboost-all-dev']
      env:
        - CXX=g++-8
        - CMAKE_GENERATOR="Ninja"
      before_install:
        - sudo unlink /usr/bin/gcc
        - sudo unlink /usr/bin/g++
        - sudo ln -s /usr/bin/g++-8 /usr/bin/g++
        - sudo ln -s /usr/bin/gcc-8 /usr/bin/gcc

    - os: linux
      dist: xenial
      compiler: clang++-9
      env:
        - CXX=clang++-9
        - CMAKE_GENERATOR="Ninja"
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty
            - llvm-toolchain-trusty-8
            - ubuntu-toolchain-r-test # llvm6.0 dep
            - libboost-all-dev
          packages: ['g++-8', 'ninja-build', 'clang-9', 'clang-8', 'lld-9', 'libboost-all-dev']

      before_install:
        - export CXX=clang++-9
      env:
        - CXX=clang++-9

# XCode 10.0
    - os: osx
      osx_image: xcode10
      sudo: required
      language: cpp
      compiler: g++-8
      env:
        - COMPILER=g++-8
        - CMAKE_GENERATOR="Ninja"
        - BUILD_TYPE=Release
      before_install:
        - brew update
        - travis_wait 40 brew install gcc
        - brew upgrade cmake
        - brew install ninja
        - export CXX=/usr/local/bin/g++-8
        - export CC=/usr/local/bin/gcc-8
# XCode 10.0
    - os: osx
      osx_image: xcode10
      sudo: required
      env:
        - CMAKE_GENERATOR="Ninja"
      language: cpp
      compiler: clang++-8
      before_install:
        - brew update
        - travis_wait 40 brew install llvm
        - brew upgrade cmake
        - brew install ninja
        - export LDFLAGS="-L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
        - export LDFLAGS="-L/usr/local/opt/llvm/lib"
        - export CPPFLAGS="-I/usr/local/opt/llvm/include"
        - export CXX=/usr/local/opt/llvm/bin/clang++
        - export CC=/usr/local/opt/llvm/bin/clang

    - os: windows
      language: sh
      env: BUILD_TYPE=Debug CMAKE_GENERATOR="MinGW Makefiles"
      compiler: gcc

    - os: windows
      language: sh
      env: BUILD_TYPE=Release CMAKE_GENERATOR="MinGW Makefiles"
      compiler: gcc

script:
  - cmake -H. -Bbuild
          -G"${CMAKE_GENERATOR}"
          -DCMAKE_SH="CMAKE_SH-NOTFOUND"
  - cmake --build build
  - cmake --build build --target test
